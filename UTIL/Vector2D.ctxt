#BlueJ class context
comment0.target=Vector2D
comment1.params=
comment1.target=Vector2D()
comment10.params=vx\ vy
comment10.target=double\ distanceSq(double,\ double)
comment11.params=v
comment11.target=double\ distanceSq(Vector2D)
comment12.params=vx\ vy
comment12.target=double\ distance(double,\ double)
comment13.params=v
comment13.target=double\ distance(Vector2D)
comment14.params=
comment14.target=double\ getAngle()
comment15.params=
comment15.target=void\ normalize()
comment16.params=
comment16.target=Vector2D\ getNormalized()
comment17.params=magnitude\ angle
comment17.target=Vector2D\ toCartesian(double,\ double)
comment18.params=v
comment18.target=void\ add(Vector2D)
comment19.params=vx\ vy
comment19.target=void\ add(double,\ double)
comment2.params=x\ y
comment2.target=Vector2D(double,\ double)
comment20.params=v1\ v2
comment20.target=Vector2D\ add(Vector2D,\ Vector2D)
comment21.params=v
comment21.target=Vector2D\ getAdded(Vector2D)
comment22.params=v
comment22.target=void\ subtract(Vector2D)
comment23.params=vx\ vy
comment23.target=void\ subtract(double,\ double)
comment24.params=v1\ v2
comment24.target=Vector2D\ subtract(Vector2D,\ Vector2D)
comment25.params=v
comment25.target=Vector2D\ getSubtracted(Vector2D)
comment26.params=scalar
comment26.target=void\ multiply(double)
comment27.params=scalar
comment27.target=Vector2D\ getMultiplied(double)
comment28.params=scalar
comment28.target=void\ divide(double)
comment29.params=scalar
comment29.target=Vector2D\ getDivided(double)
comment3.params=v
comment3.target=Vector2D(Vector2D)
comment30.params=
comment30.target=Vector2D\ getPerp()
comment31.params=v
comment31.target=double\ dot(Vector2D)
comment32.params=vx\ vy
comment32.target=double\ dot(double,\ double)
comment33.params=v1\ v2
comment33.target=double\ dot(Vector2D,\ Vector2D)
comment34.params=v
comment34.target=double\ cross(Vector2D)
comment35.params=vx\ vy
comment35.target=double\ cross(double,\ double)
comment36.params=v1\ v2
comment36.target=double\ cross(Vector2D,\ Vector2D)
comment37.params=v
comment37.target=double\ project(Vector2D)
comment38.params=vx\ vy
comment38.target=double\ project(double,\ double)
comment39.params=v1\ v2
comment39.target=double\ project(Vector2D,\ Vector2D)
comment4.params=x\ y
comment4.target=void\ set(double,\ double)
comment40.params=v
comment40.target=Vector2D\ getProjectedVector(Vector2D)
comment41.params=vx\ vy
comment41.target=Vector2D\ getProjectedVector(double,\ double)
comment42.params=v1\ v2
comment42.target=Vector2D\ getProjectedVector(Vector2D,\ Vector2D)
comment43.params=angle
comment43.target=void\ rotateBy(double)
comment44.params=angle
comment44.target=Vector2D\ getRotatedBy(double)
comment45.params=angle
comment45.target=void\ rotateTo(double)
comment46.params=angle
comment46.target=Vector2D\ getRotatedTo(double)
comment47.params=
comment47.target=void\ reverse()
comment48.params=
comment48.target=Vector2D\ getReversed()
comment49.params=
comment49.target=Vector2D\ clone()
comment5.params=v
comment5.target=void\ set(Vector2D)
comment50.params=obj
comment50.target=boolean\ equals(java.lang.Object)
comment51.params=
comment51.target=java.lang.String\ toString()
comment6.params=
comment6.target=void\ setZero()
comment7.params=
comment7.target=double[]\ getComponents()
comment8.params=
comment8.target=double\ getLength()
comment9.params=
comment9.target=double\ getLengthSq()
numComments=52
